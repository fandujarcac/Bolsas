sap.ui.define(["es/cac/bolsa/BolsaTrabajoPublicada0920/controller/ControladorBase"], function (Controller) {
	"use strict";
	return Controller.extend("es.cac.bolsa.BolsaTrabajoPublicada0920.controller.ListaPuestos", {
		/**
		 * Called when a controller is instantiated and its View controls (if available) are already created.
		 * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
		 * @memberOf es.cac.bolsa.BolsaTrabajoPublicada0920.view.ListaPuestos
		 */
		onInit: function () {
			var oRouter = sap.ui.core.UIComponent.getRouterFor(this);
			var oModeloLista = new sap.ui.model.json.JSONModel();
			// podemos añadir la ruta en la definición para solo llamar a var oModelo = new JSONModel()
			this.getView().setModel(oModeloLista, "miModeloBolsas");
			oRouter.getRoute("ListaPuestos").attachMatched(this._onRoutedMatched, this);
			var oModeloPuestos = new sap.ui.model.json.JSONModel();
			// podemos añadir la ruta en la definición para solo llamar a var oModelo = new JSONModel()
			this.getView().setModel(oModeloPuestos, "miModeloPuestos");
		},
		_onRoutedMatched: function (oEvent) {
			var oGlobalBusyDialog = new sap.m.BusyDialog();
			oGlobalBusyDialog.open();
			//var sKunnr = oEvent.getParameter("arguments").kunnr;
			this.getView().getModel().read("/ZayudaBolsaSet", {
				success: function (oData) {
					this.getView().getModel("miModeloBolsas").setData(oData.results);
					// si devolviese más de un cliente tendría que hacerse en:
					//comboBox.setModel(miModeloBolsas);
					oGlobalBusyDialog.close(); // setData(oData.results);  
				}.bind(this),
				//esto es necesario porque la petición es Asíncrona, y de esta manera el THIS apunta al objeto, si no lo pierde.  
				error: function (oError) {
					sap.m.MessageToast.show("Se ha producido un error abriendo las Bolsas");
				}
			});
			this.getView().getModel().read("/ZayudaPuestoBolsaSet", {
				success: function (oData) {
					this.getView().getModel("miModeloPuestos").setData(oData.results);
					// si devolviese más de un cliente tendría que hacerse en:
					//comboBox.setModel(miModeloBolsas);
					oGlobalBusyDialog.close(); // setData(oData.results);  
				}.bind(this),
				//esto es necesario porque la petición es Asíncrona, y de esta manera el THIS apunta al objeto, si no lo pierde.  
				error: function (oError) {
					sap.m.MessageToast.show("Se ha producido un error abriendo las Bolsas");
				}
			});
		},
		grouper: function (oGroup) {
			var oBolsaModel = this.getView().getModel("miModeloBolsas");
			//var iCurrentIndex = oBolsaModel.getProperty("/TextoBolsa");		
			var sKey = oGroup.getProperty("Bolsa");
			var stexto = oGroup.getProperty("TextoBolsa");
			var texto = "";
			for (var i = 0; i < oBolsaModel.oData.length; i++) {
				var clave = oBolsaModel.oData[i].Bolsa;
				if (clave == sKey) {
					texto = "-" + oBolsaModel.oData[i].TextoBolsa;

					break;
				}
			}
			return {
				key: sKey,
				title: texto
			};
		},
		getGroupHeader: function (oGroup) {
			//this.getView().getModel("miModeloBolsas").setData(oData.results);
			//var entity = this.getView().getModel("miModeloBolsas").getObject(oGroup.key);
			//var property = this.getView().getModel().getProperty("/" + oGroup.key + "/TextoBolsa");
			return new sap.m.GroupHeaderListItem({
				title: oGroup.key + oGroup.title,
				upperCase: false
			});
		},
		/**
		 * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered
		 * (NOT before the first rendering! onInit() is used for that one!).
		 * @memberOf es.cac.bolsa.BolsaTrabajoPublicada0920.view.ListaPuestos
		 */
		//	onBeforeRendering: function() {
		//
		//	},
		/**
		 * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.
		 * This hook is the same one that SAPUI5 controls get after being rendered.
		 * @memberOf es.cac.bolsa.BolsaTrabajoPublicada0920.view.ListaPuestos
		 */
		//	onAfterRendering: function() {
		//  oInput.focus();
		//	},
		/**
		 * Called when the Controller is destroyed. Use this one to free resources and finalize activities.
		 * @memberOf es.cac.bolsa.BolsaTrabajoPublicada0920.view.ListaPuestos
		 */
		//	onExit: function() {
		//
		//	}
		/**
		 *@memberOf es.cac.bolsa.BolsaTrabajoPublicada0920.controller.ListaPuestos
		 */
		onNavegarListaSolicitudes: function (oEvent) {
			//This code was generated by the layout editor.

			//This code was generated by the layout editor
			sap.m.MessageToast.show("Se ha seleccionado: " + oEvent.getSource().getTitle());

			//var sEjercicio =  oContext.getProperty("Ejercicio"); 
			//var sBolsa = oContext.getProperty("Bolsa");
			var sBolsa = oEvent.getSource().getBindingContext().getProperty("Bolsa");
			var sPuesto = oEvent.getSource().getBindingContext().getProperty("Puesto");
			this.getOwnerComponent().getRouter().navTo("ListaSolicitudes", {
				Bolsa: sBolsa,
				Puesto: sPuesto
			});
		}
		/**
		 *@memberOf es.cac.bolsa.BolsaTrabajoPublicada0920.controller.ListaPuestos
		 */

	

	});
});
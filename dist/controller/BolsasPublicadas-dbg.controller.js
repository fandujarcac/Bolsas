sap.ui.define([
	"es/cac/bolsa/BolsaTrabajoPublicada0920/controller/ControladorBase"
], function (Controller) {
	"use strict";

	return Controller.extend("es.cac.bolsa.BolsaTrabajoPublicada0920.controller.BolsasPublicadas", {

		/**
		 * Called when a controller is instantiated and its View controls (if available) are already created.
		 * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
		 * @memberOf es.cac.bolsa.BolsaTrabajoPublicada0920.view.BolsasPublicadas
		 */
		onInit: function () {
			//this.handleNavigationWithContext();
			var oRouter = sap.ui.core.UIComponent.getRouterFor(this);
			var oModeloBolsasPub = new sap.ui.model.json.JSONModel();
			// podemos añadir la ruta en la definición para solo llamar a var oModelo = new JSONModel()
			this.getView().setModel(oModeloBolsasPub, "miModeloBolsasPub");
			// nos vamos a subscribir a un evento que se produce cuando cambia la URL
			//nos subscribimos a esa ruta, y si coincide con la ruta Detalle lanza el evento
			oRouter.getRoute("BolsasPublicadas").attachMatched(this._onRoutedMatched, this);

			//Para el modelo xSolicitante que vamos a pasar al fragment
			var oModelo = new sap.ui.model.json.JSONModel();
			// podemos añadir la ruta en la definición para solo llamar a var oModelo = new JSONModel()
			//this.getView().setModel(oModelo, "xSolicitante");
			//this.getView().setModel(oModelo, "miBolsa");
			//this.getView().setModel(oModelo, "miPuesto");

		},

		_onRoutedMatched: function (oEvent) {

			var oGlobalBusyDialog = new sap.m.BusyDialog();
			oGlobalBusyDialog.open();
			//var sBolsa = oEvent.getParameter("arguments").Bolsa;
			var sBolsa = '002';  //Bolsa Extraordinaria
			//var sPuesto = oEvent.getParameter("arguments").Puesto;
			var filters = [];
			var filter;
			var filterBolsa = new sap.ui.model.Filter("Bolsa", sap.ui.model.FilterOperator.EQ, sBolsa);
			filters.push(filter);
			//var filterPuesto = new sap.ui.model.Filter("Puesto", sap.ui.model.FilterOperator.EQ, sPuesto);
			//filters.push(filter);
			var oDataFilter = new sap.ui.model.Filter({
				//filters: [filterBolsa, filterPuesto],
				filters: [filterBolsa],
				and: true
			});
			
			this.getView().getModel().read("/ZBolsas_PublicadasSet", {
				filters: [oDataFilter],
				success: function (oData) {
					this.getView().getModel("miModeloBolsasPub").setSizeLimit("1000");
					this.getView().getModel("miModeloBolsasPub").setData(oData.results);
					// si devolviese más de un cliente tendría que hacerse en:
					oGlobalBusyDialog.close(); // setData(oData.results);  
				}.bind(this),
				//esto es necesario porque la petición es Asíncrona, y de esta manera el THIS apunta al objeto, si no lo pierde.  
				error: function (oError) {
					sap.m.MessageToast.show("Se ha producido un error leyendo ZBolsas_PublicadasSet");
				}
			});

		},

		grouper: function (oGroup) {
			var oPublicModel = this.getView().getModel("miModeloBolsasPub");
			//var iCurrentIndex = oBolsaModel.getProperty("/TextoBolsa");		
			var sKey = oGroup.getProperty("Bolsa") + oGroup.getProperty("Puesto");
			var stexto = oGroup.getProperty("TextoBolsa");
			var texto = "";
			for (var i = 0; i < oPublicModel.oData.length; i++) {
				var clave = oPublicModel.oData[i].Bolsa + oPublicModel.oData[i].Puesto;
				if (clave == sKey) {
					texto =  oPublicModel.oData[i].Bolsa + " - " + oPublicModel.oData[i].TextoBolsa + " ------> Puesto: " +
					         oPublicModel.oData[i].Puesto + " - " + oPublicModel.oData[i].TextoPuesto ;

					break;
				}
			}
			return {
				key: sKey,
				title: texto
			};
		},
		getGroupHeader: function (oGroup) {
			//this.getView().getModel("miModeloBolsas").setData(oData.results);
			//var entity = this.getView().getModel("miModeloBolsas").getObject(oGroup.key);
			//var property = this.getView().getModel().getProperty("/" + oGroup.key + "/TextoBolsa");
			return new sap.m.GroupHeaderListItem({
				//title: oGroup.key + oGroup.title,
				title: oGroup.title,
				upperCase: false
			});
		},

		onNavegarListaSolicitudes: function (oEvent) {
				//This code was generated by the layout editor.
				var oFormat = sap.ui.core.format.DateFormat.getDateTimeInstance({
					pattern: "yyyy-MM-ddTHH:mm:ss",
					style: "medium"
				});

				//This code was generated by the layout editor
				sap.m.MessageToast.show("Se ha seleccionado: " + oEvent.getSource().getTitle());

				//var sEjercicio =  oContext.getProperty("Ejercicio"); 
				//var sBolsa = oContext.getProperty("Bolsa");
				var sEjercicio = oEvent.getSource().getBindingContext().getProperty("Ejercicio");
				var sBolsa = oEvent.getSource().getBindingContext().getProperty("Bolsa");
				var sPuesto = oEvent.getSource().getBindingContext().getProperty("Puesto");
				//var sFechaPublic = oEvent.getSource().getBindingContext().getProperty("FechaPublic");
				//var sFechaPublic = "datetime'2019-10-07T14:49:52'";
				var sFechaPublic = oFormat.format(oEvent.getSource().getBindingContext().getProperty("FechaPublic"));
				this.getOwnerComponent().getRouter().navTo("ListaSolicitudes", {
					Ejercicio: sEjercicio,
					Bolsa: sBolsa,
					Puesto: sPuesto,
					FechaPublic: sFechaPublic
				});
				
				/*this.getOwnerComponent().getRouter().navTo("DatosSolicitud", {
					UniReg: 'BOL', //sUniReg,
					Ejercicio: sEjercicio,
					FechaPublic: sFechaPublic,
					NumOrden: '02826', //sNumOrden,
					Nif: '22566828X', //sNif,
					Bolsa: sBolsa,
					Puesto: sPuesto
				});*/
			}
			/**
			 * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered
			 * (NOT before the first rendering! onInit() is used for that one!).
			 * @memberOf es.cac.bolsa.BolsaTrabajoPublicada0920.view.BolsasPublicadas
			 */
			//	onBeforeRendering: function() {
			//
			//	},

		/**
		 * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.
		 * This hook is the same one that SAPUI5 controls get after being rendered.
		 * @memberOf es.cac.bolsa.BolsaTrabajoPublicada0920.view.BolsasPublicadas
		 */
		//	onAfterRendering: function() {
		//
		//	},

		/**
		 * Called when the Controller is destroyed. Use this one to free resources and finalize activities.
		 * @memberOf es.cac.bolsa.BolsaTrabajoPublicada0920.view.BolsasPublicadas
		 */
		//	onExit: function() {
		//
		//	}

	});

});